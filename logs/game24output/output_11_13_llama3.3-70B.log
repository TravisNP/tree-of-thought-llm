Namespace(backend='llama3-3_70', temperature=0.7, task='game24', task_start_index=11, task_end_index=13, naive_run=False, prompt_sample=None, method_generate='propose', method_evaluate='value', method_select='greedy', n_generate_sample=1, n_evaluate_sample=3, n_select_sample=5, batch_size_generate=216, batch_size_evaluate=40)
Loading checkpoint shards:   0%|          | 0/30 [00:00<?, ?it/s]Loading checkpoint shards:   3%|▎         | 1/30 [00:00<00:18,  1.54it/s]Loading checkpoint shards:   7%|▋         | 2/30 [00:01<00:17,  1.63it/s]Loading checkpoint shards:  10%|█         | 3/30 [00:01<00:16,  1.60it/s]Loading checkpoint shards:  13%|█▎        | 4/30 [00:02<00:16,  1.60it/s]Loading checkpoint shards:  17%|█▋        | 5/30 [00:03<00:15,  1.62it/s]Loading checkpoint shards:  20%|██        | 6/30 [00:03<00:14,  1.65it/s]Loading checkpoint shards:  23%|██▎       | 7/30 [00:04<00:13,  1.66it/s]Loading checkpoint shards:  27%|██▋       | 8/30 [00:04<00:13,  1.64it/s]Loading checkpoint shards:  30%|███       | 9/30 [00:05<00:12,  1.63it/s]Loading checkpoint shards:  33%|███▎      | 10/30 [00:06<00:12,  1.64it/s]Loading checkpoint shards:  37%|███▋      | 11/30 [00:06<00:11,  1.66it/s]Loading checkpoint shards:  40%|████      | 12/30 [00:07<00:10,  1.67it/s]Loading checkpoint shards:  43%|████▎     | 13/30 [00:07<00:10,  1.64it/s]Loading checkpoint shards:  47%|████▋     | 14/30 [00:08<00:09,  1.63it/s]Loading checkpoint shards:  50%|█████     | 15/30 [00:09<00:09,  1.64it/s]Loading checkpoint shards:  53%|█████▎    | 16/30 [00:09<00:08,  1.66it/s]Loading checkpoint shards:  57%|█████▋    | 17/30 [00:10<00:07,  1.67it/s]Loading checkpoint shards:  60%|██████    | 18/30 [00:10<00:07,  1.65it/s]Loading checkpoint shards:  63%|██████▎   | 19/30 [00:11<00:06,  1.63it/s]Loading checkpoint shards:  67%|██████▋   | 20/30 [00:12<00:06,  1.65it/s]Loading checkpoint shards:  70%|███████   | 21/30 [00:12<00:05,  1.65it/s]Loading checkpoint shards:  73%|███████▎  | 22/30 [00:13<00:04,  1.66it/s]Loading checkpoint shards:  77%|███████▋  | 23/30 [00:14<00:04,  1.64it/s]Loading checkpoint shards:  80%|████████  | 24/30 [00:14<00:03,  1.63it/s]Loading checkpoint shards:  83%|████████▎ | 25/30 [00:15<00:03,  1.64it/s]Loading checkpoint shards:  87%|████████▋ | 26/30 [00:15<00:02,  1.66it/s]Loading checkpoint shards:  90%|█████████ | 27/30 [00:16<00:01,  1.67it/s]Loading checkpoint shards:  93%|█████████▎| 28/30 [00:17<00:01,  1.65it/s]Loading checkpoint shards:  97%|█████████▋| 29/30 [00:17<00:00,  1.64it/s]Loading checkpoint shards: 100%|██████████| 30/30 [00:17<00:00,  1.93it/s]Loading checkpoint shards: 100%|██████████| 30/30 [00:17<00:00,  1.67it/s]
Device set to use cuda:0
functools.partial(<function gpt at 0x787f2b9f7ce0>, model='llama3-3_70', temperature=0.7)
Execution time: 33.8338 seconds
[['4 + 1 = 5 (left: 1 5 8)\n', '8 - 4 = 4 (left: 1 1 4)\n', '1 + 1 = 2 (left: 2 4 8)\n', '4 - 1 = 3 (left: 1 3 8)\n', '1 * 4 = 4 (left: 1 4 8)\n', '8 / 1 = 8 (left: 1 4 8)\n', '4 * 1 = 4 (left: 1 4 8)\n', '1 + 4 = 5 (left: 1 5 8)\n', '8 + 1 = 9 (left: 1 4 9)\n', '8 - 1 = 7 (left: 1 4 7)\n', '1 + 8 = 9 (left: 1 4 9)\n'], ['1 + 1 = 2 (left: 2 5 8)\n', '8 - 1 = 7 (left: 1 1 5 7)\n', '8 - 5 = 3 (left: 1 1 3)\n', '5 + 1 = 6 (left: 1 6 8)\n', '1 + 5 = 6 (left: 1 6 8)\n', '8 + 1 = 9 (left: 1 1 5 9)\n', '8 / 1 = 8 (left: 1 1 5 8)\n', '1 * 5 = 5 (left: 1 5 8)\n', '8 * 1 = 8 (left: 1 1 5 8)\n', '1 - 1 = 0 (left: 0 5 8)\n', '8 / 5 = 1.6 (left: 1 1 1.6)\n']]
Execution time: 164.9310 seconds
[[20.0, 0.003, 40.001, 41.0, 41.0, 41.0, 41.0, 20.0, 2.001, 21.001, 2.001], [22.0, 1.001, 0.003, 1.001, 1.001, 0.003, 21.001, 2.001, 21.001, 1.002, 0.003]]
[['4 - 1 = 3 (left: 1 3 8)\n', '1 * 4 = 4 (left: 1 4 8)\n', '8 / 1 = 8 (left: 1 4 8)\n', '4 * 1 = 4 (left: 1 4 8)\n', '1 + 1 = 2 (left: 2 4 8)\n'], ['1 + 1 = 2 (left: 2 5 8)\n', '8 / 1 = 8 (left: 1 1 5 8)\n', '8 * 1 = 8 (left: 1 1 5 8)\n', '1 * 5 = 5 (left: 1 5 8)\n', '1 - 1 = 0 (left: 0 5 8)\n']]
Execution time: 40.3449 seconds
[['4 - 1 = 3 (left: 1 3 8)\n1 + 8 = 9 (left: 3 9)\n', '4 - 1 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n', '4 - 1 = 3 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n', '4 - 1 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n', '4 - 1 = 3 (left: 1 3 8)\n3 + 1 = 4 (left: 4 8)\n', '4 - 1 = 3 (left: 1 3 8)\n8 + 1 = 9 (left: 3 9)\n', '4 - 1 = 3 (left: 1 3 8)\n8 + 3 = 11 (left: 1 11)\n', '4 - 1 = 3 (left: 1 3 8)\n3 - 1 = 2 (left: 2 8)\n', '4 - 1 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n', '4 - 1 = 3 (left: 1 3 8)\n8 * 1 = 8 (left: 3 8)\n', '4 - 1 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n', '4 - 1 = 3 (left: 1 3 8)\n1 - 3 = -2 (left: -2 8)\n', '4 - 1 = 3 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)\n', '1 * 4 = 4 (left: 1 4 8)\n4 + 8 = 12 (left: 1 12)\n', '1 * 4 = 4 (left: 1 4 8)\n4 * 8 = 32 (left: 1 32)\n', '1 * 4 = 4 (left: 1 4 8)\n8 / 1 = 8 (left: 4 8)\n', '1 * 4 = 4 (left: 1 4 8)\n8 - 1 = 7 (left: 4 7)\n', '1 * 4 = 4 (left: 1 4 8)\n8 / 4 = 2 (left: 1 2)\n', '1 * 4 = 4 (left: 1 4 8)\n1 + 4 = 5 (left: 5 8)\n', '1 * 4 = 4 (left: 1 4 8)\n8 - 4 = 4 (left: 1 4)\n', '1 * 4 = 4 (left: 1 4 8)\n1 * 4 = 4 (left: 4 8)\n', '1 * 4 = 4 (left: 1 4 8)\n1 * 8 = 8 (left: 4 8)\n', '1 * 4 = 4 (left: 1 4 8)\n4 + 1 = 5 (left: 5 8)\n', '1 * 4 = 4 (left: 1 4 8)\n8 / 8 = 1 (left: 1 4)\n', '8 / 1 = 8 (left: 1 4 8)\n8 / 1 = 8 (left: 4 8 8)\n', '8 / 1 = 8 (left: 1 4 8)\n8 / 4 = 2 (left: 1 2 8)\n', '8 / 1 = 8 (left: 1 4 8)\n8 + 1 = 9 (left: 4 9)\n', '8 / 1 = 8 (left: 1 4 8)\n8 - 1 = 7 (left: 4 7)\n', '8 / 1 = 8 (left: 1 4 8)\n8 - 4 = 4 (left: 1 4 4)\n', '8 / 1 = 8 (left: 1 4 8)\n4 + 1 = 5 (left: 5 8)\n', '8 / 1 = 8 (left: 1 4 8)\n8 * 1 = 8 (left: 4 8 8)\n', '8 / 1 = 8 (left: 1 4 8)\n4 - 1 = 3 (left: 3 8)\n', '4 * 1 = 4 (left: 1 4 8)\n8 - 4 = 4 (left: 1 4 4)\n', '4 * 1 = 4 (left: 1 4 8)\n1 * 8 = 8 (left: 4 8 8)\n', '4 * 1 = 4 (left: 1 4 8)\n8 / 1 = 8 (left: 4 8 8)\n', '4 * 1 = 4 (left: 1 4 8)\n8 / 4 = 2 (left: 1 2 8)\n', '4 * 1 = 4 (left: 1 4 8)\n1 + 8 = 9 (left: 4 9)\n', '4 * 1 = 4 (left: 1 4 8)\n8 + 4 = 12 (left: 1 12)\n', '4 * 1 = 4 (left: 1 4 8)\n1 + 4 = 5 (left: 5 8)\n', '4 * 1 = 4 (left: 1 4 8)\n4 - 1 = 3 (left: 3 8)\n', '1 + 1 = 2 (left: 2 4 8)\n8 - 4 = 4 (left: 2 4 4)\n', '1 + 1 = 2 (left: 2 4 8)\n4 - 2 = 2 (left: 2 2 8)\n', '1 + 1 = 2 (left: 2 4 8)\n8 / 2 = 4 (left: 4 4 4)\n', '1 + 1 = 2 (left: 2 4 8)\n8 / 4 = 2 (left: 2 2 4)\n', '1 + 1 = 2 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n', '1 + 1 = 2 (left: 2 4 8)\n2 * 4 = 8 (left: 8 8)\n', '1 + 1 = 2 (left: 2 4 8)\n4 * 2 = 8 (left: 8 8)\n', '1 + 1 = 2 (left: 2 4 8)\n8 + 2 = 10 (left: 4 10)\n', '1 + 1 = 2 (left: 2 4 8)\n8 + 4 = 12 (left: 2 12)\n'], ['1 + 1 = 2 (left: 2 5 8)\n2 + 5 = 7 (left: 7 8)\n', '1 + 1 = 2 (left: 2 5 8)\n2 * 5 = 10 (left: 8 10)\n', '1 + 1 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n', '1 + 1 = 2 (left: 2 5 8)\n8 - 2 = 6 (left: 5 6)\n', '1 + 1 = 2 (left: 2 5 8)\n8 - 5 = 3 (left: 2 3)\n', '1 + 1 = 2 (left: 2 5 8)\n8 / 2 = 4 (left: 4 5)\n', '1 + 1 = 2 (left: 2 5 8)\n5 + 2 = 7 (left: 7 8)\n', '1 + 1 = 2 (left: 2 5 8)\n8 / 5 = 1.6 (left: 1.6 2)\n', '8 / 1 = 8 (left: 1 1 5 8)\n1 + 1 = 2 (left: 2 5 8)\n', '8 / 1 = 8 (left: 1 1 5 8)\n1 + 8 = 9 (left: 1 5 9)\n', '8 / 1 = 8 (left: 1 1 5 8)\n1 + 5 = 6 (left: 1 6 8)\n', '8 / 1 = 8 (left: 1 1 5 8)\n1 * 8 = 8 (left: 1 5 8)\n', '8 / 1 = 8 (left: 1 1 5 8)\n1 * 5 = 5 (left: 1 5 8)\n', '8 / 1 = 8 (left: 1 1 5 8)\n5 + 1 = 6 (left: 1 6 8)\n', '8 / 1 = 8 (left: 1 1 5 8)\n8 - 1 = 7 (left: 1 5 7)\n', '8 / 1 = 8 (left: 1 1 5 8)\n8 / 1 = 8 (left: 1 5 8)\n', '8 / 1 = 8 (left: 1 1 5 8)\n5 - 1 = 4 (left: 1 4 8)\n', '8 / 1 = 8 (left: 1 1 5 8)\n8 + 1 = 9 (left: 1 5 9)\n', '8 / 1 = 8 (left: 1 1 5 8)\n5 + 8 = 13 (left: 1 1 13)\n', '8 * 1 = 8 (left: 1 1 5 8)\n1 + 1 = 2 (left: 2 5 8)\n', '8 * 1 = 8 (left: 1 1 5 8)\n5 - 1 = 4 (left: 1 1 4 8)\n', '8 * 1 = 8 (left: 1 1 5 8)\n8 - 1 = 7 (left: 1 1 5 7)\n', '8 * 1 = 8 (left: 1 1 5 8)\n8 / 1 = 8 (left: 1 1 5 8)\n', '8 * 1 = 8 (left: 1 1 5 8)\n5 + 1 = 6 (left: 1 1 6 8)\n', '8 * 1 = 8 (left: 1 1 5 8)\n8 + 1 = 9 (left: 1 1 5 9)\n', '8 * 1 = 8 (left: 1 1 5 8)\n1 * 1 = 1 (left: 1 1 5 8)\n', '8 * 1 = 8 (left: 1 1 5 8)\n8 - 5 = 3 (left: 1 1 3)\n', '8 * 1 = 8 (left: 1 1 5 8)\n5 - 8 = -3 (left: 1 1 -3)\n', '8 * 1 = 8 (left: 1 1 5 8)\n5 + 8 = 13 (left: 1 1 13)\n', '1 * 5 = 5 (left: 1 5 8)\n1 + 8 = 9 (left: 5 9)\n', '1 * 5 = 5 (left: 1 5 8)\n5 + 1 = 6 (left: 6 8)\n', '1 * 5 = 5 (left: 1 5 8)\n8 - 1 = 7 (left: 5 7)\n', '1 * 5 = 5 (left: 1 5 8)\n1 * 5 = 5 (left: 5 8)\n', '1 * 5 = 5 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n', '1 * 5 = 5 (left: 1 5 8)\n5 - 1 = 4 (left: 4 8)\n', '1 * 5 = 5 (left: 1 5 8)\n8 + 1 = 9 (left: 5 9)\n', '1 * 5 = 5 (left: 1 5 8)\n8 + 5 = 13 (left: 1 13)\n', '1 - 1 = 0 (left: 0 5 8)\n0 + 5 = 5 (left: 5 8)\n', '1 - 1 = 0 (left: 0 5 8)\n8 + 5 = 13 (left: 0 13)\n', '1 - 1 = 0 (left: 0 5 8)\n5 - 0 = 5 (left: 5 8)\n', '1 - 1 = 0 (left: 0 5 8)\n8 - 5 = 3 (left: 0 3)\n', '1 - 1 = 0 (left: 0 5 8)\n5 * 8 = 40 (left: 0 40)\n', '1 - 1 = 0 (left: 0 5 8)\n8 / 5 = 1.6 (left: 0 1.6)\n', '1 - 1 = 0 (left: 0 5 8)\n8 - 0 = 8 (left: 5 8)\n', '1 - 1 = 0 (left: 0 5 8)\n0 * 8 = 0 (left: 0 5)\n']]
Execution time: 439.4094 seconds
[[20.002, 60.0, 3.0, 60.0, 0.003, 20.002, 0.003, 0.003, 60.0, 60.0, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 1.002, 0.003, 0.003, 0.003, 1.002, 0.003, 0.003, 22.0, 21.001, 0.003, 2.001, 1.002, 0.003, 60.0, 2.001, 0.003, 0.003, 22.0, 21.001, 0.003, 1.002, 60.0, 20.002, 0.003, 20.002, 20.002, 60.0, 0.003, 0.003, 20.002, 60.0], [1.002, 0.003, 60.0, 0.003, 0.003, 1.002, 1.002, 0.003, 1.0, 1.002, 0.003, 1.001, 1.001, 0.003, 1.002, 1.001, 22.0, 1.002, 0.003, 1.0, 1.002, 0.0, 0.001, 0.003, 0.002, 0.001, 0.003, 0.002, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 1.001, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003]]
[['4 - 1 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n', '4 - 1 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n', '4 - 1 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n', '4 - 1 = 3 (left: 1 3 8)\n8 * 1 = 8 (left: 3 8)\n', '8 / 1 = 8 (left: 1 4 8)\n4 - 1 = 3 (left: 3 8)\n'], ['1 + 1 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n', '8 / 1 = 8 (left: 1 1 5 8)\n5 - 1 = 4 (left: 1 4 8)\n', '1 + 1 = 2 (left: 2 5 8)\n2 + 5 = 7 (left: 7 8)\n', '1 + 1 = 2 (left: 2 5 8)\n8 / 2 = 4 (left: 4 5)\n', '1 + 1 = 2 (left: 2 5 8)\n5 + 2 = 7 (left: 7 8)\n']]
Execution time: 40.0047 seconds
[['4 - 1 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n', '4 - 1 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n', '4 - 1 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n', '4 - 1 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 8)\n', '4 - 1 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n', '4 - 1 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)\n', '4 - 1 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n8 + 3 = 11 (left: 11)\n', '4 - 1 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\n', '4 - 1 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\n', '4 - 1 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)\n', '4 - 1 = 3 (left: 1 3 8)\n8 * 1 = 8 (left: 3 8)\n8 / 3 = 2 (left: 2)\n', '4 - 1 = 3 (left: 1 3 8)\n8 * 1 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)\n', '4 - 1 = 3 (left: 1 3 8)\n8 * 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n', '4 - 1 = 3 (left: 1 3 8)\n8 * 1 = 8 (left: 3 8)\n8 + 3 = 11 (left: 11)\n', '8 / 1 = 8 (left: 1 4 8)\n4 - 1 = 3 (left: 3 8)\n8 / 3 = 2.6667 (left: 2.6667 8)\n', '8 / 1 = 8 (left: 1 4 8)\n4 - 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 3 5)\n', '8 / 1 = 8 (left: 1 4 8)\n4 - 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24 8)\n', '8 / 1 = 8 (left: 1 4 8)\n4 - 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11 8)\n'], ['1 + 1 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n', '1 + 1 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)\n', '1 + 1 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n', '1 + 1 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n', '8 / 1 = 8 (left: 1 1 5 8)\n5 - 1 = 4 (left: 1 4 8)\n1 + 4 = 5 (left: 5 8)\n', '8 / 1 = 8 (left: 1 1 5 8)\n5 - 1 = 4 (left: 1 4 8)\n8 - 1 = 7 (left: 4 7)\n', '8 / 1 = 8 (left: 1 1 5 8)\n5 - 1 = 4 (left: 1 4 8)\n8 - 4 = 4 (left: 1 4)\n', '8 / 1 = 8 (left: 1 1 5 8)\n5 - 1 = 4 (left: 1 4 8)\n1 * 4 = 4 (left: 4 8)\n', '8 / 1 = 8 (left: 1 1 5 8)\n5 - 1 = 4 (left: 1 4 8)\n1 * 8 = 8 (left: 4 8)\n', '8 / 1 = 8 (left: 1 1 5 8)\n5 - 1 = 4 (left: 1 4 8)\n4 * 8 = 32 (left: 1 32)\n', '8 / 1 = 8 (left: 1 1 5 8)\n5 - 1 = 4 (left: 1 4 8)\n8 / 1 = 8 (left: 4 8)\n', '8 / 1 = 8 (left: 1 1 5 8)\n5 - 1 = 4 (left: 1 4 8)\n8 / 4 = 2 (left: 1 2)\n', '1 + 1 = 2 (left: 2 5 8)\n2 + 5 = 7 (left: 7 8)\n8 / 7 = 1 (left: 1 8)\n', '1 + 1 = 2 (left: 2 5 8)\n2 + 5 = 7 (left: 7 8)\n8 - 7 = 1 (left: 1 7)\n', '1 + 1 = 2 (left: 2 5 8)\n2 + 5 = 7 (left: 7 8)\n7 * 8 = 56 (left: 56)\n', '1 + 1 = 2 (left: 2 5 8)\n2 + 5 = 7 (left: 7 8)\n8 + 7 = 15 (left: 15)\n', '1 + 1 = 2 (left: 2 5 8)\n8 / 2 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n', '1 + 1 = 2 (left: 2 5 8)\n8 / 2 = 4 (left: 4 5)\n4 + 5 = 9 (left: 9)\n', '1 + 1 = 2 (left: 2 5 8)\n8 / 2 = 4 (left: 4 5)\n5 - 4 = 1 (left: 1)\n', '1 + 1 = 2 (left: 2 5 8)\n8 / 2 = 4 (left: 4 5)\n4 / 5 = 0.8 (left: 0.8)\n', '1 + 1 = 2 (left: 2 5 8)\n5 + 2 = 7 (left: 7 8)\n8 - 7 = 1 (left: 1)\n', '1 + 1 = 2 (left: 2 5 8)\n5 + 2 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15)\n', '1 + 1 = 2 (left: 2 5 8)\n5 + 2 = 7 (left: 7 8)\n7 * 8 = 56 (left: 56)\n', '1 + 1 = 2 (left: 2 5 8)\n5 + 2 = 7 (left: 7 8)\n8 / 7 = 1 (left: 1)\n', '1 + 1 = 2 (left: 2 5 8)\n5 + 2 = 7 (left: 7 8)\n8 / 8 = 1 (left: 7 1)\n', '1 + 1 = 2 (left: 2 5 8)\n5 + 2 = 7 (left: 7 8)\n7 / 7 = 1 (left: 1 8)\n', '1 + 1 = 2 (left: 2 5 8)\n5 + 2 = 7 (left: 7 8)\n8 - 8 = 0 (left: 0 7)\n', '1 + 1 = 2 (left: 2 5 8)\n5 + 2 = 7 (left: 7 8)\n7 / 8 = 0 (left: 0 8)\n', '1 + 1 = 2 (left: 2 5 8)\n5 + 2 = 7 (left: 7 8)\n7 - 8 = -1 (left: -1)\n', '1 + 1 = 2 (left: 2 5 8)\n5 + 2 = 7 (left: 7 8)\n8 - 8 = 0 (left: 0 7)\n', '1 + 1 = 2 (left: 2 5 8)\n5 + 2 = 7 (left: 7 8)\n8 / 8 = 1 (left: 1 7)\n', '1 + 1 = 2 (left: 2 5 8)\n5 + 2 = 7 (left: 7 8)\n7 - 7 = 0 (left: 0 8)\n', '1 + 1 = 2 (left: 2 5 8)\n5 + 2 = 7 (left: 7 8)\n7 * 8 = 56 (left: 56)\n', '1 + 1 = 2 (left: 2 5 8)\n5 + 2 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15)\n']]
Execution time: 228.7384 seconds
[[0.003, 20.002, 60.0, 3.0, 60.0, 20.002, 0.003, 60.0, 60.0, 0.003, 0.002, 20.002, 60.0, 0.003, 3.0, 0.003, 0.003, 0.003], [20.002, 0.003, 60.0, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.002, 0.003, 0.003, 0.002, 0.003, 0.003, 0.003, 0.003, 1.0, 0.003, 0.003, 0.002, 0.003, 0.003, 0.003, 0.003, 0.003, 20.001, 0.003, 0.003, 0.003, 0.002, 0.003]]
[['4 - 1 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n', '4 - 1 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n', '4 - 1 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\n', '4 - 1 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\n', '4 - 1 = 3 (left: 1 3 8)\n8 * 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n'], ['1 + 1 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n', '1 + 1 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n', '1 + 1 = 2 (left: 2 5 8)\n5 + 2 = 7 (left: 7 8)\n7 - 8 = -1 (left: -1)\n', '1 + 1 = 2 (left: 2 5 8)\n8 / 2 = 4 (left: 4 5)\n4 / 5 = 0.8 (left: 0.8)\n', '1 + 1 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)\n']]
Execution time: 5.8509 seconds
[['4 - 1 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (4 - 1) * 8 = 24\n', '4 - 1 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (4 - 1) * (8 / 1) = 24\n', '4 - 1 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (4 - 1) * 8 = 24\n', '4 - 1 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (4 - 1) * 8 = 24\n', '4 - 1 = 3 (left: 1 3 8)\n8 * 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (4 - 1) * (8 * 1) = 24\n'], ['1 + 1 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (5 - (1 + 1)) * 8 = 24\n']]
Execution time: 4.5585 seconds
[[60.0, 60.0, 60.0, 60.0, 60.0], [60.0]]
[['4 - 1 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (4 - 1) * 8 = 24\n', '4 - 1 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (4 - 1) * (8 / 1) = 24\n', '4 - 1 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (4 - 1) * 8 = 24\n', '4 - 1 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (4 - 1) * 8 = 24\n', '4 - 1 = 3 (left: 1 3 8)\n8 * 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (4 - 1) * (8 * 1) = 24\n'], ['1 + 1 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (5 - (1 + 1)) * 8 = 24\n']]
